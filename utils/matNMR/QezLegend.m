%
%
%
% matNMR v. 3.9.94 - A processing toolbox for NMR/EPR under MATLAB
%
% Copyright (c) 1997-2009  Jacco van Beek
% jabe@users.sourceforge.net
%
%
% This program is free software; you can redistribute it and/or
% modify it under the terms of the GNU General Public License
% as published by the Free Software Foundation; either version 2
% of the License, or (at your option) any later version.
% 
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
% 
% You should have received a copy of the GNU General Public License
% along with this program; if not, write to the Free Software
% Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
%
% --> gpl.txt
%
% Should yo be too lazy to do this, please remember:
%    - The code may be altered under the condition that all changes are clearly marked 
%      with your name and the date and that none of the names currently present in the 
%      code are removed.
%
% Furthermore:
%    -Please update the BugFixes.txt (i.e. the changelog file)!
%    -Please inform me of useful changes and annoying bugs!
%
% Jacco
%
%
% ====================================================================================
%
%
function QezLegend(command, Button)
%
%   GUI input for legends and linetypes 
%   
%   typing 'QezLegend' from the command line opens an 
%   interactive dialogue box, allowing the user to specify
%   legend labels, linestyles, line colors, linewidths, and
%   markersizes using pulldown menus.   
%   
%   This routine requires Matlab's 'legend.m' ver 4.2
%                             
%   Richard G. Cobb    3/96
%   cobbr@plk.af.mil 
%

%
%
% completely changed for matNMR (matlab v. 5) by Jacco van Beek
%
% The default MATLAB legend.m is no longer used as it lacked the ability to have an italic or bold font 
% for the legend !! The MATLAB v 5 version of legend.m has been changed for this purpose.
%
% april '97
%

global QmatNMR



if nargin < 1
  %
  %determine which window to operate on if none has been defined yet
  %
  QmatNMR.LegendCurrentFig = gcf;


  %
  %try and read the labels from an existing legend
  %
  CurrentStrings = [];
  hl = findobj('parent', QmatNMR.LegendCurrentFig, 'Tag','legend');
  if (length(hl)>1)
    disp('QezLegend WARNING: multiple legends present in plot. Refusing to read parameters ...');
  
  elseif (length(hl) == 1)
    hl1 = get(hl, 'userdata');
    nlines=length(hl1.labels);
    if (nlines)
      CurrentStrings = deblank(cell2mat(hl1.labels(1)));
      for EZi=2:nlines
        CurrentStrings = str2mat(CurrentStrings, deblank(cell2mat(hl1.labels(EZi))));
      end
    end
  end


  %
  %check whether figure already exists. If so close it !!
  %
  QmatNMR.Ph = findobj(allchild(0),'tag','LegendWindow'); %check for Legend window
  if ~isempty(QmatNMR.Ph)
    %
    %first we remember the current strings in the edit buttons
    %
    QmatNMR.handles = get(QmatNMR.Ph, 'UserData');
    nlines=length(find(QmatNMR.handles(:,1)));
    CurrentStrings = get(QmatNMR.handles(1,2),'string');
    for EZi=2:nlines
      CurrentStrings = str2mat(CurrentStrings,get(QmatNMR.handles(EZi,2),'string'));
    end
    CurrentStrings = flipud(CurrentStrings);


    %
    %delete the figure
    %
    delete(QmatNMR.Ph);
  end

  siblines=[];
  sibs=get(gca,'children');
  
  for EZi=1:length(sibs)
    if strcmp('line',get(sibs(EZi),'type'))
      siblines=[siblines,sibs(EZi)];
    end
  end
  
  if isempty(siblines)
    disp('No valid data for current figure.')
    disp('Plot data first.')
    return
  end

%
  haold=QmatNMR.LegendCurrentFig;
  axold=get(haold, 'CurrentAxes');
  T1=['-   ';'--  ';':   ';'-.  ';'none'];
  T2=['None     ';'.        ';'+        ';'o        ';'*        ';'x        ';'square   ';'diamond  ';'^        ';'v        ';'>        ';'<        ';'pentagram';'hexagram '];
  T3=['Cyan      ';'Magenta   ';'Green     ';'Red       ';'Yellow    ';'Blue      '; ...
      'Black     ';'White     ';'Dark Green';'Dark Red  ';'Copper    ';'Acqumarine';'Purple    '; ...
      'Grey20    ';'Grey40    ';'Grey60    ';'Grey80    ';'ochre     ';'Pear      '];
	T4=str2mat('1', '2', '3', '4', '5', '7', '10', '15', '20');
	T5=str2mat('0.25', '0.5', '0.75', '1', '1.5', '2', '3', '4', '6', '8', '10');
  T6=QmatNMR.FontList;
  T7=['8 ';'9 ';'10';'11';'12';'14';'16';'18';'20';'24';'30';'36'];
  T8=['normal ';'italic ';'oblique'];
  T9=['light ';'normal';'demi  ';'bold  '];

  si=zeros(11,1);si2=si;
  si(1:length(siblines))=siblines;
  
  QmatNMR.LegendWindow =figure('Color','k','NumberTitle','off', ...
  	'Name', 'Legend for matNMR',...
  	'Units','Normalized',...
        'Menubar','none',...
	'Position',[.1 .1  .60 .23+.01*length(siblines)], ...
	'color', QmatNMR.ColorScheme.Figure1Back, ...
	'Tag', 'LegendWindow');

  %
  %To work around a Matlab bug (see BugFixes.txt, 11-05-'04) we redefine the position and units.
  %
  set(QmatNMR.LegendWindow, 'units', 'normalized', 'position', [.1 .1  .60 .23+.01*length(siblines)]);

  sfactor=.25/(.1+.05*length(siblines));
  axes('units', 'normalized', 'Position', [0 0 1 1]);
  axis off
  axis([0,1,0,1])
  if length(siblines) == 1
    Y = .5;
    sfactor = 1.2;
  elseif length(siblines) == 2
    Y = [ 0.1 .5];
    sfactor = 1.2;
  else
    Y = linspace(0.10, 0.60,length(siblines))';
  end

  X=[0.03 .05 .07 .09];
  ui=zeros(11,1); bi=zeros(11,1);
  
  for EZi=1:length(siblines)
    line(X,[Y(EZi) Y(EZi) Y(EZi) Y(EZi)],'linestyle',get(siblines(EZi),'linestyle'),...
                     'color',get(siblines(EZi),'color')  )

    %
    %if possible use the previously-defined strings, otherwise use an empty string
    %
    if (length(siblines)+1-EZi > size(CurrentStrings, 1))
      Stringo = [];
    else
      Stringo = CurrentStrings(length(siblines)+1-EZi, :);
    end
    ui(EZi) = uicontrol('Parent',QmatNMR.LegendWindow,...
			'style','edit',...
                        'string', Stringo ,...
			'units','normalized',...
			'backgroundcolor', QmatNMR.ColorScheme.Button1Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button1Fore, ...
			'position',[.17 (Y(EZi)-.055*sfactor) .45 .11*sfactor]);
    bi(EZi) = uicontrol('Parent',QmatNMR.LegendWindow,...
                        'Style','checkbox',...
			'Units','Normalized',...
			'Position',[.10 (Y(EZi)-.05*sfactor) .05 .1*sfactor],...
			'Visible','on', ...
			'backgroundcolor', QmatNMR.ColorScheme.Button1Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button1Fore, ...
			'callback', ['QezLegend(50, ' num2str(EZi) ');']);
  end
  
  examps=[];
  sibs=get(gca,'children');
  
  for EZi=1:length(sibs)
    if strcmp('line',get(sibs(EZi),'type'))
      examps=[examps,sibs(EZi)];
    end
  end

  si2(1:length(examps))=fliplr(examps);
  
  sfactor = 1.5625;
  
  uicontrol('Parent',QmatNMR.LegendWindow,...
                        'Style', 'Pushbutton', ...
  			'Units', 'normalized', ...
  			'Position', [.655 .88 .15 .07*sfactor],...
  			'String', 'Linestyle :', ...
			'backgroundcolor', QmatNMR.ColorScheme.Button2Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button2Fore, ...
  			'HorizontalAlignment', 'center');
  			
  mi(1) = uicontrol('Parent',QmatNMR.LegendWindow,...
                        'Style','Popup',...
			'Units','Normalized',...
			'Position',[.81 .88 .18 .07*sfactor],...
			'String',T1,...
			'backgroundcolor', QmatNMR.ColorScheme.Button1Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button1Fore, ...
			'Visible','on',...
                        'HorizontalAlignment', 'left',...
			'CallBack','QezLegend(1)');
 
 
 
    uicontrol('Parent',QmatNMR.LegendWindow,...
                        'Style', 'Pushbutton', ...
  			'Units', 'normalized', ...
  			'Position', [.655 .77 .15 .07*sfactor],...
  			'String', 'Linewidth :', ...
			'backgroundcolor', QmatNMR.ColorScheme.Button2Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button2Fore, ...
  			'HorizontalAlignment', 'center');

  mi(4) = uicontrol('Parent',QmatNMR.LegendWindow,...
                        'Style','Popup',...
			'Units','Normalized',...
			'Position',[.81 .77 .18 .07*sfactor],...
			'String',T5,...
			'backgroundcolor', QmatNMR.ColorScheme.Button1Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button1Fore, ...
			'Visible','on',...
                        'HorizontalAlignment', 'left',...
			'CallBack','QezLegend(4)');
 

  uicontrol('Parent',QmatNMR.LegendWindow,...
                        'Style', 'Pushbutton', ...
  			'Units', 'normalized', ...
  			'Position', [.655 .66 .15 .07*sfactor],...
			'backgroundcolor', QmatNMR.ColorScheme.Button2Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button2Fore, ...
 			'String', 'Marker :', ...
  			'HorizontalAlignment', 'center');
 
  mi(7) = uicontrol('Parent',QmatNMR.LegendWindow,...
                        'Style','Popup',...
                        'Units','Normalized',...
			'Position',[.81 .66 .18 .07*sfactor],...
			'String',T2,...
			'backgroundcolor', QmatNMR.ColorScheme.Button1Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button1Fore, ...
			'Visible','on',...
                        'HorizontalAlignment', 'left',...
			'CallBack','QezLegend(7)');



  uicontrol('Parent',QmatNMR.LegendWindow,...
                        'Style', 'Pushbutton', ...
  			'Units', 'normalized', ...
  			'Position', [.655 .55 .15 .07*sfactor],...
			'backgroundcolor', QmatNMR.ColorScheme.Button2Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button2Fore, ...
  			'String', 'Marker Size :', ...
  			'HorizontalAlignment', 'center');

  mi(3) = uicontrol('Parent',QmatNMR.LegendWindow,...
                        'Style','Popup',...
			'Units','Normalized',...
			'Position',[.81 .55 .18 .07*sfactor],...
			'String',T4,...
			'backgroundcolor', QmatNMR.ColorScheme.Button1Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button1Fore, ...
			'Visible','on',...
                        'HorizontalAlignment', 'left',...
			'CallBack','QezLegend(3)');


  uicontrol('Parent',QmatNMR.LegendWindow,...
                        'Style', 'Pushbutton', ...
  			'Units', 'normalized', ...
  			'Position', [.655 .44 .15 .07*sfactor],...
			'backgroundcolor', QmatNMR.ColorScheme.Button2Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button2Fore, ...
  			'String', 'Color :', ...
  			'HorizontalAlignment', 'center');

  mi(2) = uicontrol('Parent',QmatNMR.LegendWindow,...
                        'Style','Popup',...
			'Units','Normalized',...
			'Position',[.81 .44 .18 .07*sfactor],...
			'String',T3,...
			'backgroundcolor', QmatNMR.ColorScheme.Button1Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button1Fore, ...
			'Visible','on',...
                        'HorizontalAlignment', 'left',...
			'CallBack','QezLegend(2)');




 % find current font properties
 
   cursize = 5;		%12 points
   curangle = 1;	%normal angle
   curweight= 2;	%normal weight

   for EZi = 1:size(T6,1)
     if strcmp(deblank(T6(EZi,:)), get(axold,'FontName'))
      curfont = EZi;
     end
   end
   
   for EZi = 1:size(T7,1)
     if findstr(T7(EZi,:), num2str(get(axold,'FontSize')))
       cursize = EZi;
     end
   end
   
   for EZi = 1:size(T8,1)
     if findstr(T8(EZi,:),get(axold,'FontAngle'))
       curangle = EZi;
     end
   end
        
   for EZi = 1:size(T9,1)
     if findstr(T9(EZi,:),get(axold,'FontWeight'))
      curweight = EZi;
     end
   end
   
   if curfont == 5 & strcmp(deblank(get(axold,'FontName')),deblank(T6(4,:)))
      curfont = 4;
   elseif curfont == 10 & strcmp(deblank(get(axold,'FontName')),deblank(T6(9,:)))
      curfont = 9;
   end

  uicontrol('Parent',QmatNMR.LegendWindow,...
                        'Style', 'Pushbutton', ...
  			'Units', 'normalized', ...
  			'Position', [.655 .33 .15 .07*sfactor],...
  			'String', 'Font :', ...
			'backgroundcolor', QmatNMR.ColorScheme.Button2Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button2Fore, ...
 			'HorizontalAlignment', 'center');

  mi(5) = uicontrol('Parent',QmatNMR.LegendWindow,...
                        'Style','Popup',...
			'Units','Normalized',...
			'Position',[.81 .33 .18 .07*sfactor],...
			'String',T6,...
			'backgroundcolor', QmatNMR.ColorScheme.Button1Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button1Fore, ...
			'Value',curfont,...
			'Visible','on',...
                        'HorizontalAlignment', 'left',...
			'CallBack','QezLegend(15)');




  uicontrol('Parent',QmatNMR.LegendWindow,...
                        'Style', 'Pushbutton', ...
  			'Units', 'normalized', ...
  			'Position', [.655 .22 .15 .07*sfactor],...
			'backgroundcolor', QmatNMR.ColorScheme.Button2Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button2Fore, ...
  			'String', 'Font Size :', ...
  			'HorizontalAlignment', 'center');

  mi(6) = uicontrol('Parent',QmatNMR.LegendWindow,...
                        'Style','Popup',...
			'Units','Normalized',...
			'Position',[.81 .22 .18 .07*sfactor],...
			'String',T7,...
			'backgroundcolor', QmatNMR.ColorScheme.Button1Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button1Fore, ...
			'Value',cursize,...
			'Visible','on',...
                        'HorizontalAlignment', 'left',...
			'CallBack','QezLegend(16)');




  uicontrol('Parent',QmatNMR.LegendWindow,...
                        'Style', 'Pushbutton', ...
  			'Units', 'normalized', ...
  			'Position', [.655 .11 .15 .07*sfactor],...
			'backgroundcolor', QmatNMR.ColorScheme.Button2Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button2Fore, ...
  			'String', 'Font Angle :', ...
  			'HorizontalAlignment', 'center');

  mi(8) = uicontrol('Parent',QmatNMR.LegendWindow,...
                        'Style','Popup',...
			'Units','Normalized',...
			'Position',[.81 .11 .18 .07*sfactor],...
			'backgroundcolor', QmatNMR.ColorScheme.Button1Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button1Fore, ...
			'String',T8,...
			'Value',curangle,...
			'Visible','on',...
                        'HorizontalAlignment', 'left',...
			'CallBack','QezLegend(18)');




  uicontrol('Parent',QmatNMR.LegendWindow,...
                        'Style', 'Pushbutton', ...
  			'Units', 'normalized', ...
  			'Position', [.655 .0 .15 .07*sfactor],...
			'backgroundcolor', QmatNMR.ColorScheme.Button2Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button2Fore, ...
  			'String', 'Font Weight :', ...
  			'HorizontalAlignment', 'center');

  mi(9) = uicontrol('Parent',QmatNMR.LegendWindow,...
                        'Style','Popup',...
			'Units','Normalized',...
			'Position',[.81 .0 .18 .07*sfactor],...
			'backgroundcolor', QmatNMR.ColorScheme.Button1Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button1Fore, ...
			'String',T9,...
			'Value',curweight,...
			'Visible','on',...
                        'HorizontalAlignment', 'left',...
			'CallBack','QezLegend(19)');



   

  uicontrol('Parent',QmatNMR.LegendWindow,...
			'style','pushbutton',...
			'string','Add Legend',...
			'units','normalized',...
			'position',[.14 .87 .17 .07*sfactor],...
			'backgroundcolor', QmatNMR.ColorScheme.Button9Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button9Fore, ...
			'callback','QezLegend(5)');
  uicontrol('Parent',QmatNMR.LegendWindow,...
			'style','text',...
			'string','Labels',...
			'units','normalized',...
			'backgroundcolor', QmatNMR.ColorScheme.Button12Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button12Fore, ...
			'position',[.247 .7 .2 .06*sfactor]);
  uicontrol('Parent',QmatNMR.LegendWindow,...
			'style','pushbutton',...
			'string','Remove Legends',...
			'units','normalized',...
			'backgroundcolor', QmatNMR.ColorScheme.Button1Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button1Fore, ...
			'position',[.32 .87 .23 .07*sfactor],...
			'callback','QezLegend(6)');
  uicontrol('Parent',QmatNMR.LegendWindow,...
			'style','pushbutton',...
			'string','Full WIdth',...
			'units','normalized',...
			'position',[.555 .87 .10 .07*sfactor],...
			'backgroundcolor', QmatNMR.ColorScheme.Button3Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button3Fore, ...
             		'Callback', 'QTEMP=get(gcf, ''position''); set(gcf, ''position'', [0 QTEMP(2) 1 QTEMP(4)]);');
  uicontrol('Parent',QmatNMR.LegendWindow,...
			'style','pushbutton',...
			'string','Close',...
			'units','normalized',...
			'position',[.01 .87 .12 .07*sfactor],...
			'backgroundcolor', QmatNMR.ColorScheme.Button8Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button8Fore, ...
			'callback','delete(gcf)');
  uicontrol('Parent',QmatNMR.LegendWindow,...
			'style','pushbutton',...
			'string','Refresh',...
			'units','normalized',...
			'position',[.01 .75 .12 .07*sfactor],...
			'backgroundcolor', QmatNMR.ColorScheme.Button10Back, ...
			'foregroundcolor', QmatNMR.ColorScheme.Button10Fore, ...
			'callback','figure(QmatNMR.LegendCurrentFig); QezLegend');
 

  mh=zeros(size(ui));mh(1:9)=mi;mh(10)=haold;mh(11)=axold;
  set(QmatNMR.LegendWindow,'UserData',[si ui bi mh si2]);
  figure(QmatNMR.LegendWindow);

elseif command==1
	T1=[' -  ';' -- ';' :  ';' -. ';'none'];
	QmatNMR.handles = get(QmatNMR.LegendWindow,'UserData');
        nlines=length(find(QmatNMR.handles(:,1)));
        checked=zeros(nlines,1);
        for EZi=1:nlines
         checked(EZi)=get(QmatNMR.handles(EZi,3),'Value');
        end
        for EZi=find(checked)
         set(QmatNMR.handles(EZi,1),'LineStyle',T1(get(QmatNMR.handles(1,4),'Value'),:))
         set(QmatNMR.handles(EZi,5),'LineStyle',T1(get(QmatNMR.handles(1,4),'Value'),:)) 
 	end

elseif command==7
	T2=['None     ';'.        ';'+        ';'o        ';'*        ';'x        ';'square   ';'diamond  ';'^        ';'v        ';'>        ';'<        ';'pentagram';'hexagram '];
        QmatNMR.handles = get(QmatNMR.LegendWindow,'UserData');
        nlines=length(find(QmatNMR.handles(:,1)));
        checked=zeros(nlines,1);
        for EZi=1:nlines
          checked(EZi)=get(QmatNMR.handles(EZi,3),'Value');
        end
        for EZi=find(checked)
          set(QmatNMR.handles(EZi,1),'Marker',T2(get(QmatNMR.handles(7,4),'Value'),:))
          set(QmatNMR.handles(EZi,5),'Marker',T2(get(QmatNMR.handles(7,4),'Value'),:)) 
 	end


elseif command==2
	T3=[[0 1 1];[1 0 1];[0 1 0];[1 0 0];[1 1 0];[0 0 1];[0 0 0];[1 1 1];[0 .5 0];[.6 0 0];[1 .62 .4];[.29 1 .73];[.6 .2 .8];[.8 .8 .8];[.6 .6 .6];[.4 .4 .4];[.2 .2 .2];[0.75 0.75 0];[0.82 0.88 0.19]];
	QmatNMR.handles = get(QmatNMR.LegendWindow,'UserData');
        nlines=length(find(QmatNMR.handles(:,1)));
        checked=zeros(nlines,1);
        for EZi=1:nlines
         checked(EZi)=get(QmatNMR.handles(EZi,3),'Value');
        end
        for EZi=find(checked)
         set(QmatNMR.handles(EZi,1),'Color',T3(get(QmatNMR.handles(2,4),'Value'),:))
         set(QmatNMR.handles(EZi,5),'Color',T3(get(QmatNMR.handles(2,4),'Value'),:)) 
 	end

elseif command==3
	T4=str2mat('1', '2', '3', '4', '5', '7', '10', '15', '20');
	QmatNMR.handles = get(QmatNMR.LegendWindow,'UserData');
        nlines=length(find(QmatNMR.handles(:,1)));
        checked=zeros(nlines,1);
        for EZi=1:nlines
         checked(EZi)=get(QmatNMR.handles(EZi,3),'Value');
        end
        for EZi=find(checked)
         set(QmatNMR.handles(EZi,1),'MarkerSize',eval(T4(get(QmatNMR.handles(3,4),'Value'),:)))
         set(QmatNMR.handles(EZi,5),'MarkerSize',eval(T4(get(QmatNMR.handles(3,4),'Value'),:))) 
 	end
        refresh

elseif command==4
	T5=str2mat('0.25', '0.5', '0.75', '1', '1.5', '2', '3', '4', '6', '8', '10');
	QmatNMR.handles = get(QmatNMR.LegendWindow,'UserData');
        nlines=length(find(QmatNMR.handles(:,1)));
        checked=zeros(nlines,1);
        for EZi=1:nlines
         checked(EZi)=get(QmatNMR.handles(EZi,3),'Value');
        end
        for EZi=find(checked)
         set(QmatNMR.handles(EZi,1),'LineWidth',eval(T5(get(QmatNMR.handles(4,4),'Value'),:)))
         set(QmatNMR.handles(EZi,5),'LineWidth',eval(T5(get(QmatNMR.handles(4,4),'Value'),:))) 
 	end
        refresh

elseif command==5

%
%Add legend ...
%

				%Read current position of the figure window
				%This will be used by PutScreenRight !
				%just in case the user has changed the default size ...

        T6=QmatNMR.FontList;
	T7=['8 ';'9 ';'10';'11';'12';'14';'16';'18';'20';'24';'30';'36'];
	T8=['Normal ';'Italic ';'Oblique'];        
	T9=['Light ';'Normal';'Demi  ';'Bold  '];

   	QmatNMR.handles = get(QmatNMR.LegendWindow,'UserData');
   	
        nlines=length(find(QmatNMR.handles(:,1)));
        S = [str2mat(get(QmatNMR.handles(1,2),'string'))  '         '];
        for EZi=2:nlines
       	 S = str2mat(S,[get(QmatNMR.handles(EZi,2),'string') '         ']);
        end 
        indx=[];
         for EZi=1:nlines
          if ~ isempty((abs(deblank(S(EZi,:)))))
              indx=[indx EZi];
          end
         end
         
          if ~ isempty(indx)
            figure(QmatNMR.handles(10,4));
            oldfont=get(QmatNMR.handles(11,4),'Fontname');
            oldsize=get(QmatNMR.handles(11,4),'FontSize');
            oldangle=get(QmatNMR.handles(11,4),'FontAngle');
            oldweight=get(QmatNMR.handles(11,4),'Fontweight');
            
            set(QmatNMR.handles(11,4),'FontName',  deblank(T6(get(QmatNMR.handles(5,4),'Value'),:)), ...
                               'FontSize',  eval(T7(get(QmatNMR.handles(6,4),'Value'),:)), ...
                               'FontAngle', deblank(T8(get(QmatNMR.handles(8,4),'Value'),:)), ...
                               'FontWeight',deblank(T9(get(QmatNMR.handles(9,4),'Value'),:)))
            Qlegend(flipud(QmatNMR.handles(indx,1)),flipud(S(indx,:)))
            
	    set(QmatNMR.handles(11,4),'FontName',oldfont, ...
	    		       'FontSize',oldsize, ...
	    		       'FontAngle', oldangle, ...
	    		       'FontWeight', oldweight);
          end
          
          figure(QmatNMR.LegendCurrentFig);
	  disp('Legend added to the plot ...');

          
elseif command == 6
        QmatNMR.handles = get(QmatNMR.LegendWindow,'UserData');
	delete(findobj(QmatNMR.handles(10,4), 'tag', 'legend'));
        refresh
        figure(QmatNMR.LegendCurrentFig);

elseif ((command == 15) | (command == 16) | (command == 18) | (command == 19))
        QmatNMR.handles = get(QmatNMR.LegendWindow,'UserData');

elseif command == 50				%show current line properties if a check box is activated
        QmatNMR.handles = get(QmatNMR.LegendWindow,'UserData');
	
        if get(QmatNMR.handles(Button, 3), 'Value') 	%is the check box on ??? If so continue ... 
  
    	  T1=flipud(['-   ';'--  ';':   ';'-.  ';'none']);
          T2=['none     ';'.        ';'+        ';'o        ';'*        ';'x        ';'square   ';'diamond  ';'^        ';'v        ';'>        ';'<        ';'pentagram';'hexagram '];
          T3=[[0 1 1];[1 0 1];[0 1 0];[1 0 0];[1 1 0];[0 0 1];[0 0 0];[1 1 1];[0 .5 0];[.6 0 0];[1 .62 .4];[.29 1 .73];[.6 .2 .8];[.8 .8 .8];[.6 .6 .6];[.4 .4 .4];[.2 .2 .2]];
          T4=[1; 2; 3; 4; 5; 7; 10; 15; 20];
          T5=[0.25; 0.5; 0.75; 1; 1.5; 2; 3; 4; 6; 8; 10];
	  
	  handle = QmatNMR.handles(Button, 1);		%QmatNMR.handles(1,1) = handle of line denoted by Button
          for EZi = 1:size(T1,1)
            if strcmp(deblank(T1(EZi,:)), get(handle,'LineStyle'))
              set(QmatNMR.handles(1,4),'Value',(6 - EZi));
            end
          end    
    
          for EZi = 1:size(T2,1)
            if strcmp(deblank(T2(EZi,:)), get(handle,'Marker'))
              set(QmatNMR.handles(7,4),'Value',EZi)
            end
          end    
    
          for EZi = 1:size(T3,1)
            if (T3(EZi,:) == get(handle,'Color'))
              set(QmatNMR.handles(2,4),'Value',EZi)
            end
          end    
    
          for EZi = 1:size(T4,1)
            if (T4(EZi,:) == get(handle,'MarkerSize'))
              set(QmatNMR.handles(3,4),'Value',EZi);
            end
          end    
    
          set(QmatNMR.handles(4,4), 'Value', 1);
          for EZi = 1:size(T5,1)
            if (T5(EZi,:) == get(handle,'LineWidth'))
              set(QmatNMR.handles(4,4),'Value',EZi);
            end
          end    
        end  
end
